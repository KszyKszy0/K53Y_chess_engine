#pragma once
#include "position.h"
#include "bitboard.h"

class Evaluator
{
    public:

    //Simple evaluation taking in consideration
    //Psqt table and plain material
    int evaluate(Position& pos);

    //Simple psqt table for psqt eval
    //Indexed [pieceType][square]
    int psqtArray[WHITE_KING+1][64]=
    {

        //PAWN
        {
            0, 0, 0, 0, 0, 0, 0, 0,
            6, 6, 6, 7, 7, 6, 6, 6,
            8, 7, 6, 7, 7, 6, 7, 8,
            7, 3, 4, 6, 6, 4, 3, 5,
            5, 1, 6, 7, 7, 5, 1, 4,
            5, 8, 1, 5, 5, 1, 8, 4,
            5, 6, 3, 1, 2, 3, 6, 5,
            0, 0, 0, 0, 0, 0, 0, 0
        },

        //KNIGHT
        {   -100, 0, 0, 0, 0, 0, 0, -100,
            3, 1, 4, 0, 0, 4, 1, 3,
            1, 6, 3, 6, 6, 3, 6, 1,
            2, 5, 4, 4, 4, 4, 5, 2,
            3, 3, 4, 3, 3, 4, 3, 3,
            1, 3, 5, 1, 1, 5, 3, 1,
            0, 0, 0, 3, 3, 0, 0, 0,
            -100, 0, 2, 0, 2, 0, 0, -100
        },

        //BISHOP
        {   -5, -5, 0, 0, 0, 0, -5, -5,
            0, 1, 2, 3, 3, 2, 1, 0,
            1, 5, 5, 8, 8, 4, 4, 1,
            2, 4, 5, 7, 7, 5, 4, 2,
            4, 4, 5, 3, 3, 5, 4, 4,
            -2, 4, 4, 7, 7, 4, 4, -2,
            3, 8, 3, 6, 6, 1, 8, 2,
            -5, -5, 4, 0, 0, 4, -5, -5
        },

        //ROOK
        {   5, 10, 10, 10, 10, 10, 10, 5,
            15, 15, 15, 15, 15, 15, 15, 15,
            0, 1, 1, 2, 2, 1, 1, 0,
            0, 0, 3, 3, 3, 3, 0, 0,
            0, 0, 3, 3, 3, 3, 0, 0,
            4, 4, 6, 6, 6, 6, 4, 4,
            8, 8, 8, 8, 8, 8, 8, 8,
            5, 0, 0, 10, 10, 10, 0, 5
        },

        //QUEEN
        {   -2, 2, 2, 1, 1, 2, 2, -2,
            10, 5, 10, 8, 8, 10, 5, 10,
            8, 7, 8, 9, 9, 8, 7, 8,
            1, 1, 6, 7, 7, 8, 7, 4,
            5, 0, 2, 7, 7, 2, 0, 3,
            3, 7, 2, 9, 9, 5, 7, 3,
            -4, -5, 10, 8, 8, -1, -4, -5,
            0, 0, 2, 4, 1, 0, 0, 0,
        },

        //KING
        {
            -10, 0, 1, 0, 0, 0, 1, -10,
            -10, 0, 0, 0, 0, 0, 0, -10,
            -10, 0, 0, 0, 0, 0, 0, -10,
            -10, 0, 0, 1, 1, 0, 0, -10,
            -10, 0, 0, 1, 1, 0, 0, -10,
            -10, 0, 0, 0, 0, 0, 0, -10,
            -10, 0, 0, 0, 0, 0, 0, -10,
            -10, 0, 1, 0, 0, 0, 1, -10,
        }
    };

    int flipIndex(int index)
    {
        return index ^ 56;
    }
};